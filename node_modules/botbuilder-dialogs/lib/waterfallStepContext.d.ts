/**
 * @module botbuilder-dialogs
 */
/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
import { DialogContext } from './dialogContext';
import { DialogReason, DialogTurnResult } from './dialog';
export interface WaterfallStepInfo<O extends object> {
    index: number;
    options: O;
    reason: DialogReason;
    result: any;
    values: object;
    /**
     * Used to skip to the next waterfall step.
     * @param result (Optional) result to pass to the next step.
     */
    onNext: (result?: any) => Promise<DialogTurnResult>;
}
export declare class WaterfallStepContext<O extends object = {}> extends DialogContext {
    private _info;
    constructor(dc: DialogContext, info: WaterfallStepInfo<O>);
    readonly index: number;
    readonly options: O;
    readonly reason: DialogReason;
    readonly result: any;
    readonly values: object;
    next(result?: any): Promise<DialogTurnResult>;
}
